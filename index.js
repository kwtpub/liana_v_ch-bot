const TelegramBot = require('node-telegram-bot-api');
const fs = require('fs');
const path = require('path');

// –¢–æ–∫–µ–Ω –≤–∞—à–µ–≥–æ –±–æ—Ç–∞
const TOKEN = '7818601616:AAEXkZi0rNL8IGxheghMq8UX9PCUPtyE858';

// ID –∫–∞–Ω–∞–ª–∞
const CHANNEL_ID = -1002397816296;

// ID –∞–¥–º–∏–Ω-—á–∞—Ç–∞
const ADMIN_CHAT_ID = -1002368236633;

// –ü—É—Ç—å –∫ —Ñ–∞–π–ª—É —Å –ø–æ–¥–ø–∏—Å–∫–∞–º–∏
const SUBSCRIPTIONS_FILE = path.join(__dirname, 'data', 'subscriptions.json');

// –°–æ–∑–¥–∞–µ–º —ç–∫–∑–µ–º–ø–ª—è—Ä –±–æ—Ç–∞
const bot = new TelegramBot(TOKEN, { polling: true });

// –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–¥–ø–∏—Å–∫–∞—Ö
function loadSubscriptions() {
    if (!fs.existsSync(SUBSCRIPTIONS_FILE)) {
        fs.writeFileSync(SUBSCRIPTIONS_FILE, JSON.stringify([]));
    }
    return JSON.parse(fs.readFileSync(SUBSCRIPTIONS_FILE, 'utf8'));
}

// –°–æ—Ö—Ä–∞–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–¥–ø–∏—Å–∫–∞—Ö
function saveSubscriptions(subscriptions) {
    fs.writeFileSync(SUBSCRIPTIONS_FILE, JSON.stringify(subscriptions, null, 2));
}

// –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–¥–ø–∏—Å–∫—É
function addSubscription(userId, expiresAt) {
    const subscriptions = loadSubscriptions();
    const existingSubscription = subscriptions.find(sub => sub.userId === userId);

    if (existingSubscription) {
        // –ï—Å–ª–∏ –ø–æ–¥–ø–∏—Å–∫–∞ —É–∂–µ –µ—Å—Ç—å, –æ–±–Ω–æ–≤–ª—è–µ–º –µ—ë —Å—Ä–æ–∫
        existingSubscription.expiresAt = expiresAt;
    } else {
        // –ï—Å–ª–∏ –ø–æ–¥–ø–∏—Å–∫–∏ –Ω–µ—Ç, –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—É—é
        subscriptions.push({ userId, expiresAt });
    }

    saveSubscriptions(subscriptions);
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å–∫—É
function checkSubscription(userId) {
    const subscriptions = loadSubscriptions();
    const userSubscription = subscriptions.find(sub => sub.userId === userId);
    return userSubscription && new Date(userSubscription.expiresAt) > new Date();
}

// –ü–æ–ª—É—á–∞–µ–º –¥–∞—Ç—É –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏
function getSubscriptionExpiresAt(userId) {
    const subscriptions = loadSubscriptions();
    const userSubscription = subscriptions.find(sub => sub.userId === userId);
    return userSubscription ? new Date(userSubscription.expiresAt) : null;
}

// –£–¥–∞–ª—è–µ–º –ø–æ–¥–ø–∏—Å–∫—É
function removeSubscription(userId) {
    const subscriptions = loadSubscriptions();
    const updatedSubscriptions = subscriptions.filter(sub => sub.userId !== userId);
    saveSubscriptions(updatedSubscriptions);
}

// –£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∫–∞–Ω–∞–ª–∞
async function removeUserFromChannel(userId) {
    try {
        await bot.banChatMember(CHANNEL_ID, userId);
        await bot.unbanChatMember(CHANNEL_ID, userId);
        console.log(`–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${userId} —É–¥–∞–ª–µ–Ω –∏–∑ –∫–∞–Ω–∞–ª–∞.`);
    } catch (error) {
        console.error(`–û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è ${userId}:`, error);
    }
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ–¥–ø–∏—Å–∫–∏ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
async function checkSubscriptions() {
    const subscriptions = loadSubscriptions();
    const now = new Date();

    for (const sub of subscriptions) {
        const expiresAt = new Date(sub.expiresAt);
        const timeLeft = expiresAt - now; // –í—Ä–µ–º—è –¥–æ –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö

        // –ï—Å–ª–∏ –¥–æ –æ–∫–æ–Ω—á–∞–Ω–∏—è –ø–æ–¥–ø–∏—Å–∫–∏ –æ—Å—Ç–∞–ª–æ—Å—å 2 –¥–Ω—è –∏–ª–∏ –º–µ–Ω—å—à–µ
        if (timeLeft <= 2 * 24 * 60 * 60 * 1000 && timeLeft > 0) {
            // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ–º –ø—Ä–æ–¥–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É
            bot.sendMessage(sub.userId, `üîî –í–Ω–∏–º–∞–Ω–∏–µ!

–í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –∑–∞–∫–∞–Ω—á–∏–≤–∞–µ—Ç—Å—è —á–µ—Ä–µ–∑ ${Math.ceil(timeLeft / (24 * 60 * 60 * 1000))} –¥–Ω–µ–π.

–ü—Ä–æ–¥–ª–∏—Ç–µ –µ—ë –∑–∞—Ä–∞–Ω–µ–µ, —á—Ç–æ–±—ã —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –¥–æ—Å—Ç—É–ø –∫ –∑–∞–∫—Ä—ã—Ç–æ–º—É –∫–∞–Ω–∞–ª—É! üî•üí´`, {
                reply_markup: {
                    inline_keyboard: [
                        [
                            { text: 'üîÑ –ü—Ä–æ–¥–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É', callback_data: 'renew_subscription' },
                        ]
                    ]
                }
            });
        }

        // –ï—Å–ª–∏ –ø–æ–¥–ø–∏—Å–∫–∞ –∏—Å—Ç–µ–∫–ª–∞
        if (timeLeft <= 0) {
            // –£–¥–∞–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –∫–∞–Ω–∞–ª–∞
            await removeUserFromChannel(sub.userId);

            // –£–¥–∞–ª—è–µ–º –ø–æ–¥–ø–∏—Å–∫—É –∏–∑ JSON
            removeSubscription(sub.userId);
        }
    }
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /start
bot.onText(/\/start/, (msg) => {
    const chatId = msg.chat.id;
    const userId = msg.from.id;
    const firstName = msg.from.first_name;

    if (checkSubscription(userId)) {
        const expiresAt = getSubscriptionExpiresAt(userId);
        const timeLeft = expiresAt - new Date();

        bot.sendMessage(chatId, `–ü—Ä–∏–≤–µ—Ç, ${firstName}! üéâ

–£ –≤–∞—Å —É–∂–µ –µ—Å—Ç—å –∞–∫—Ç–∏–≤–Ω–∞—è –ø–æ–¥–ø–∏—Å–∫–∞, –∏ –æ–Ω–∞ –±—É–¥–µ—Ç –¥–µ–π—Å—Ç–≤–æ–≤–∞—Ç—å –µ—â—ë ${Math.ceil(timeLeft / (24 * 60 * 60 * 1000))} –¥–Ω–µ–π. –ù–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º! üî•üí´`, {
            reply_markup: {
                inline_keyboard: [
                    [
                        { text: '‚úÖ –ó–∞–π—Ç–∏', callback_data: 'sendLink' },
                        { text: 'üîÑ –ü—Ä–æ–¥–ª–∏—Ç—å –ø–æ–¥–ø–∏—Å–∫—É', callback_data: 'renew_subscription' },
                    ]
                ]
            }
        });
    } else {
        // –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤—ã–±—Ä–∞—Ç—å —Ç–∏–ø –ø–æ–¥–ø–∏—Å–∫–∏
        bot.sendMessage(chatId, `–ü—Ä–∏–≤–µ—Ç! 
–Ø —Ç–≤–æ–π –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ –∏ –ø—Ä–æ–≤–µ–¥—É —Ç–µ–±—è –≤ —Å–µ–∫—Ä–µ—Ç–Ω—ã–π —Å—Ç–∏–ª—å–Ω—ã–π –∫–ª—É–± üõçÔ∏è

–ü—Ä–æ–∏–∑–≤–µ–¥–∏ –æ–ø–ª–∞—Ç—É –Ω–∞ –∫–∞—Ä—Ç—É —Å–ª–µ–¥—É—è –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º –Ω–∏–∂–µ üëá`, {
            reply_markup: {
                inline_keyboard: [
                    [
                        { text: '1 –º–µ—Å—è—Ü - 10 USD', callback_data: 'subscribe_1' },
                        { text: '6 –º–µ—Å—è—Ü–µ–≤ - 50 USD', callback_data: 'subscribe_6' },
                    ],
                    [
                        { text: '1 –≥–æ–¥ - 90 USD', callback_data: 'subscribe_12' },
                    ]
                ]
            }
        });
    }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ callback_query (–∫–Ω–æ–ø–∫–∏ "–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å", "–û—Ç–∫–ª–æ–Ω–∏—Ç—å", –≤—ã–±–æ—Ä –ø–æ–¥–ø–∏—Å–∫–∏ –∏ –ø—Ä–æ–¥–ª–µ–Ω–∏–µ)
bot.on('callback_query', async (query) => {
    const chatId = query.message.chat.id;
    const userId = query.from.id;
    const data = query.data;

    console.log(`Callback query received: ${data}`); // –õ–æ–≥–∏—Ä—É–µ–º callback-–∑–∞–ø—Ä–æ—Å

    if (data === 'sendLink') {
        const inviteLink = await bot.createChatInviteLink(-1002397816296, {
            member_limit: 1, // –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π
        });
        bot.sendMessage(chatId, inviteLink.invite_link);
    } else if (data === 'renew_subscription') {
        // –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –≤—ã–±—Ä–∞—Ç—å —Ç–∏–ø –ø–æ–¥–ø–∏—Å–∫–∏ –¥–ª—è –ø—Ä–æ–¥–ª–µ–Ω–∏—è
        bot.sendMessage(chatId, `üìå –í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –ø–æ–¥–ø–∏—Å–∫–∏ –¥–ª—è –ø—Ä–æ–¥–ª–µ–Ω–∏—è:`, {
            reply_markup: {
                inline_keyboard: [
                    [
                        { text: '1 –º–µ—Å—è—Ü - 10 USD', callback_data: 'subscribe_1' },
                        { text: '6 –º–µ—Å—è—Ü–µ–≤ - 50 USD', callback_data: 'subscribe_6' },
                    ],
                    [
                        { text: '1 –≥–æ–¥ - 90 USD', callback_data: 'subscribe_12' },
                    ]
                ]
            }
        });
    } else if (data.startsWith('subscribe_')) {
        const period = parseInt(data.split('_')[1]);
        bot.sendMessage(chatId, `‚ú® –í—ã –≤—ã–±—Ä–∞–ª–∏  –ø–æ–¥–ø–∏—Å–∫—É –Ω–∞ ${period} –º–µ—Å—è—Ü–µ–≤‚ú®

üí≥ –°—Ç–æ–∏–º–æ—Å—Ç—å: 1999 ‚ÇΩ

üìå –û–ø–ª–∞—Ç–∞: –ü–µ—Ä–µ–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –Ω–∞ –∫–∞—Ä—Ç—É 4729 7578 6687 6777

üì∏ –ü–æ—Å–ª–µ –æ–ø–ª–∞—Ç—ã –æ—Ç–ø—Ä–∞–≤—å—Ç–µ —Å–∫—Ä–∏–Ω –≤ —á–∞—Ç –∏ –æ–∂–∏–¥–∞–π –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è`);
    } else if (data.startsWith('approve_')) {
        const targetUserId = parseInt(data.split('_')[1]); // ID –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –∫–æ—Ç–æ—Ä–æ–≥–æ –Ω—É–∂–Ω–æ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å
        const period = parseInt(data.split('_')[2]); // –ü–µ—Ä–∏–æ–¥ –ø–æ–¥–ø–∏—Å–∫–∏

        const isMember = await isUserInChannel(targetUserId);

        if (isMember) {
            const expiresAt = new Date();
            expiresAt.setMonth(expiresAt.getMonth() + period); // –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥
            addSubscription(targetUserId, expiresAt.toISOString());
            bot.sendMessage(targetUserId, `üéâ –ì–æ—Ç–æ–≤–æ!

–í—ã —É–∂–µ –≤ –∫–∞–Ω–∞–ª–µ! –í–∞—à–∞ –ø–æ–¥–ø–∏—Å–∫–∞ –ø—Ä–æ–¥–ª–µ–Ω–∞ –Ω–∞ ${period} –º–µ—Å—è—Ü–µ–≤. –ù–∞—Å–ª–∞–∂–¥–∞–π—Ç–µ—Å—å –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º! üî•üí´`);
        } else {
            try {
                const inviteLink = await bot.createChatInviteLink(CHANNEL_ID, {
                    member_limit: 1, // –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–µ –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–π
                });
                const expiresAt = new Date();
                expiresAt.setMonth(expiresAt.getMonth() + period); // –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –ø–µ—Ä–∏–æ–¥
                addSubscription(targetUserId, expiresAt.toISOString());
                bot.sendMessage(targetUserId, `üî• –û–ø–ª–∞—Ç–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∞! üî•

–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –∑–∞–∫—Ä—ã—Ç—ã–π —Å—Ç–∏–ª—å–Ω—ã–π –∫–ª—É–±! üõçÔ∏è‚ú®

${inviteLink.invite_link}

–ï—Å–ª–∏ —É —Ç–µ–±—è –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –≤—Å–µ–≥–¥–∞ –º–æ–∂–µ—à—å –Ω–∞–ø–∏—Å–∞—Ç—å —Å—é–¥–∞ @liana_v_ch
`);
            } catch (error) {
                console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–¥–æ–±—Ä–µ–Ω–∏–∏ –∑–∞—è–≤–∫–∏:', error);
                bot.sendMessage(targetUserId, `‚ö†Ô∏è –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫‚Ä¶
–ú—ã –Ω–µ —Å–º–æ–≥–ª–∏ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –æ–ø–ª–∞—Ç—É. –ü—Ä–æ–≤–µ—Ä—å:
‚úîÔ∏è –ü—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤
‚úîÔ∏è –°—É–º–º—É –ø–µ—Ä–µ–≤–æ–¥–∞
‚úîÔ∏è –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–Ω —á–µ–∫–∞

–ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã, –ø–∏—à–∏ —Å—é–¥–∞ - @liana_v_ch`);
            }
        }

        // –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ —Å —Ñ–æ—Ç–æ –∏–∑ –∞–¥–º–∏–Ω-—á–∞—Ç–∞
        bot.deleteMessage(chatId, query.message.message_id);
    } else if (data.startsWith('reject_')) {
        const targetUserId = parseInt(data.split('_')[1]);
        bot.sendMessage(targetUserId, `‚ö†Ô∏è –ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫‚Ä¶
–ú—ã –Ω–µ —Å–º–æ–≥–ª–∏ –ø–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å –æ–ø–ª–∞—Ç—É. –ü—Ä–æ–≤–µ—Ä—å:
‚úîÔ∏è –ü—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å —Ä–µ–∫–≤–∏–∑–∏—Ç–æ–≤
‚úîÔ∏è –°—É–º–º—É –ø–µ—Ä–µ–≤–æ–¥–∞
‚úîÔ∏è –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π —Å–∫—Ä–∏–Ω —á–µ–∫–∞

–ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–ª–∏ –≤–æ–ø—Ä–æ—Å—ã, –ø–∏—à–∏ —Å—é–¥–∞ - @liana_v_ch`);
        bot.deleteMessage(chatId, query.message.message_id);
    }

    // –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É callback_query
    bot.answerCallbackQuery(query.id);
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π —Å —Ñ–æ—Ç–æ
bot.on('message', async (msg) => {
    const chatId = msg.chat.id;
    const userId = msg.from.id;
    const firstName = msg.from.first_name;

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–æ–¥–µ—Ä–∂–∏—Ç –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ —Ñ–æ—Ç–æ (—Å–∫—Ä–∏–Ω—à–æ—Ç –ø–µ—Ä–µ–≤–æ–¥–∞)
    if (msg.photo) {
        // –ü–µ—Ä–µ—Å—ã–ª–∞–µ–º —Ñ–æ—Ç–æ –≤ –∞–¥–º–∏–Ω-—á–∞—Ç
        const photoId = msg.photo[msg.photo.length - 1].file_id; // –ë–µ—Ä–µ–º —Å–∞–º–æ–µ –±–æ–ª—å—à–æ–µ —Ñ–æ—Ç–æ

        // –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º –∞–¥–º–∏–Ω—É –≤—ã–±—Ä–∞—Ç—å –ø–µ—Ä–∏–æ–¥ –ø–æ–¥–ø–∏—Å–∫–∏
        bot.sendPhoto(ADMIN_CHAT_ID, photoId, {
            caption: `–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å ${firstName} (ID: ${userId}) –æ—Ç–ø—Ä–∞–≤–∏–ª —Å–∫—Ä–∏–Ω—à–æ—Ç –æ–ø–ª–∞—Ç—ã. –í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Ä–∏–æ–¥ –ø–æ–¥–ø–∏—Å–∫–∏:`,
            reply_markup: {
                inline_keyboard: [
                    [
                        { text: '1 –º–µ—Å—è—Ü', callback_data: `approve_${userId}_1` },
                        { text: '6 –º–µ—Å—è—Ü–µ–≤', callback_data: `approve_${userId}_6` },
                    ],
                    [
                        { text: '1 –≥–æ–¥', callback_data: `approve_${userId}_12` },
                        { text: '‚ùå –û—Ç–∫–ª–æ–Ω–∏—Ç—å', callback_data: `reject_${userId}` },
                    ]
                ]
            }
        });

        // –°–æ–æ–±—â–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é, —á—Ç–æ –æ–ø–ª–∞—Ç–∞ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è
        bot.sendMessage(chatId, `üí≥ –°–ø–∞—Å–∏–±–æ!

–í–∞—à –ø–ª–∞—Ç–µ–∂ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫—É. –û–∂–∏–¥–∞–π—Ç–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è ‚Äî —Å–∫–æ—Ä–æ –≤—Å—ë –±—É–¥–µ—Ç –≥–æ—Ç–æ–≤–æ! ‚è≥‚ú®`);
    }
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É—á–∞—Å—Ç–Ω–∏–∫–æ–º –∫–∞–Ω–∞–ª–∞
async function isUserInChannel(userId) {
    try {
        const chatMember = await bot.getChatMember(CHANNEL_ID, userId);
        return ['member', 'administrator', 'creator'].includes(chatMember.status);
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –∫–∞–Ω–∞–ª–∞:', error);
        return false;
    }
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫
bot.on('polling_error', (error) => {
    console.error('–û—à–∏–±–∫–∞ polling:', error);
});

// –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–ø–∏—Å–æ–∫ (—Ä–∞–∑ –≤ –¥–µ–Ω—å)
setInterval(checkSubscriptions, 24 * 60 * 60 * 1000);

// –ó–∞–ø—É—Å–∫ –ø—Ä–æ–≤–µ—Ä–∫–∏ –ø–æ–¥–ø–∏—Å–æ–∫ –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –±–æ—Ç–∞
checkSubscriptions();